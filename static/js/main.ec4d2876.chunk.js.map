{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","current","setCurrent","marginLeft","transitionProperty","transitionDuration","firstLiStyle","setFirstLiStyle","useEffect","prev","imageStyle","width","height","listStyle","className","style","map","image","localeCompare","src","alt","indexOf","type","onClick","prevStyle","parseInt","old","disabled","length","App","setStep","setFrameSize","setItemWidth","setAnimationDuration","value","min","max","onChange","e","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec4d2876.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  step = 3,\n  frameSize = 3,\n  itemWidth = 130,\n  animationDuration = 1000,\n  infinite = false,\n}) => {\n  const [current, setCurrent] = useState(0);\n  const [firstLiStyle, setFirstLiStyle] = useState({\n    marginLeft: '0',\n    transitionProperty: 'margin-left',\n    transitionDuration: `${animationDuration}ms`,\n  });\n\n  useEffect(() => {\n    setFirstLiStyle((prev) => ({\n      ...prev,\n      transitionDuration: `${animationDuration}ms`,\n    }));\n  }, [animationDuration]);\n\n  const imageStyle = {\n    width: `${itemWidth}px`,\n    height: `${itemWidth}px`,\n  };\n  const listStyle = {\n    width: `${frameSize * itemWidth}px`,\n  };\n\n  const handlePrev = () => {\n    if (!infinite) {\n      setFirstLiStyle(prevStyle => ({\n        ...prevStyle,\n        marginLeft: current > step\n          ? `${(parseInt(prevStyle.marginLeft, 10)) + (step * itemWidth)}px`\n          : '0',\n      }));\n\n      if (current > step + 1) {\n        setCurrent(old => old - step);\n      } else {\n        setCurrent(0);\n      }\n    }\n  };\n\n  const handleNext = () => {\n    if (!infinite) {\n      if (current + step < images.length - frameSize) {\n        setFirstLiStyle(prevStyle => ({\n          ...prevStyle,\n          marginLeft: `${parseInt(prevStyle.marginLeft, 10) - (step * itemWidth)}px`,\n        }));\n        setCurrent(old => old + step);\n      } else {\n        setFirstLiStyle(prevStyle => ({\n          ...prevStyle,\n          marginLeft: `${-(images.length - frameSize) * itemWidth}px`,\n        }));\n\n        setCurrent((images.length - frameSize + 1));\n      }\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul className=\"Carousel__list\" style={listStyle}>\n        {images.map(image => (\n          <li\n            key={image}\n            style={image.localeCompare(images[0]) === 0\n              ? firstLiStyle\n              : {}}\n          >\n            <img className=\"image\" style={imageStyle} src={image} alt={`${images.indexOf(image)}`} />\n          </li>\n        ))}\n      </ul>\n\n      <button\n        type=\"button\"\n        onClick={handlePrev}\n        disabled={current === 0}\n      >\n        Prev\n      </button>\n      <button\n        type=\"button\"\n        data-cy=\"next\"\n        onClick={handleNext}\n        disabled={current === images.length - frameSize + 1}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\nexport const App: React.FC = () => {\n  const images = [\n    './img/1.png',\n    './img/2.png',\n    './img/3.png',\n    './img/4.png',\n    './img/5.png',\n    './img/6.png',\n    './img/7.png',\n    './img/8.png',\n    './img/9.png',\n    './img/10.png',\n  ];\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n      <div className=\"inputs\">\n        <label>\n          Step\n          <input\n            type=\"number\"\n            value={step}\n            min=\"1\"\n            max=\"10\"\n            onChange={(e) => setStep(+e.target.value)}\n          />\n        </label>\n        <label>\n          FrameSize\n          <input\n            type=\"number\"\n            value={frameSize}\n            min=\"1\"\n            max=\"10\"\n            onChange={(e) => setFrameSize(+e.target.value)}\n          />\n        </label>\n        <label>\n          ItemWidth\n          <input\n            type=\"number\"\n            value={itemWidth}\n            min=\"50\"\n            max=\"200\"\n            onChange={(e) => setItemWidth(+e.target.value)}\n          />\n        </label>\n        <label>\n          Animation Duration\n          <input\n            type=\"number\"\n            value={animationDuration}\n            min=\"500\"\n            max=\"3000\"\n            onChange={(e) => setAnimationDuration(+e.target.value)}\n          />\n        </label>\n      </div>\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={false}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}